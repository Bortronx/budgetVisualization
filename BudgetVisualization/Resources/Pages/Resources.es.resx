<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Click the link above to find out who represents your district and tell them what you would like to see funded in next year’s budget" xml:space="preserve">
    <value>Haga Click en el enlace de arriba para saber quién representa su distrito y decirle que usted quisiera ver financiado en el presupuesto del próximo ano.</value>
  </data>
  <data name="Community Action and Human Services" xml:space="preserve">
    <value>Acción comunitaria y Servicios Humanos</value>
  </data>
  <data name="Corrections and Rehabilitation" xml:space="preserve">
    <value>Correcciones y Rehabilitación</value>
  </data>
  <data name="Departmental Budget Narratives Used On This Site:" xml:space="preserve">
    <value>Narrativas del Presupuesto por Departamento usadas en este sitio: </value>
  </data>
  <data name="Here is Miami-Dade’s Adopted Budget for 2020-2021" xml:space="preserve">
    <value>Aqui esta el Presupuesto Adoptado por el Miami-Dade para el 2020-2021</value>
  </data>
  <data name="Resources" xml:space="preserve">
    <value>Recursos</value>
  </data>
  <data name="Table of Operating Budget" xml:space="preserve">
    <value>Tabla de Presupuesto Operativo</value>
  </data>
  <data name="The 2021-2021 Budget" xml:space="preserve">
    <value>El Presupuesto 2021-2022</value>
  </data>
  <data name="The Mayor and Board of County Commissioners are our elected representatives in Miami-Dade." xml:space="preserve">
    <value>El Alcalde y el Buro de Commisionados del condado son nuestros representates elejidos en el Miami-Dade.</value>
  </data>
  <data name="This table provides an overview of all operating budget expenses by strategic area, department, and the primary activities engaged in by those departments. These expenses are broken down by revenue source: the table represents how much funding goes to departmental activities and from which sources and also shows last year’s numbers for comparison. For a more detailed breakdown, take a look at the departmental budget narratives." xml:space="preserve">
    <value>Esta tabla muestra todos los gastos del presupuesto operativo por área estratégica, departamento, y actividades acuminadas por esos departamentos. Estos gastos están separados por de dónde vienen la ganancia. La table representa cuantos gastos van hacia actividades del departamento y de donde viene ese dinero. También muestra los números del año pasado para comparar. Para una mirada en detalle vea las narrativas del presupuesto por departamento.</value>
  </data>
  <data name="Who is My Commissioner?" xml:space="preserve">
    <value>Quien es mi Comisionado?</value>
  </data>
</root>