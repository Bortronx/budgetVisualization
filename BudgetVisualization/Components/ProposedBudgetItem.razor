@using BudgetVisualization.Data 

<div class="mat-layout-grid mat-layout-grid-align-left item-box">
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3 item item-illustration">
            <img src=@itemData.imageURL />
        </div>

        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3 item">
            <div class="item-content">
                @itemData.ItemName <br />
                $@itemData.BudgetValue Proposed
            </div>

            <div class="item-percent">
                @itemData.percentChange% from last year
            </div>
        </div>
    </div>
</div>

<style>
    .item {
        position: relative;
        width: 200px;
        height: 150px;
        background-color: #accce7;
    }

    .item-content {
        text-align: center;
    }

    .item-percent {
        text-align: center;
        position: absolute;
        bottom: 0px;
        right: 35px;
        font-size: 15px;
    }

    .item-illustration {
        display: block;
        margin-left: 25px;
        margin-right: auto;
        width: 50%;
    }

    .item-box {
        margin: auto;
        width: fit-content;
        padding: 0.5rem;
    }
</style>


@code {

    [Parameter]
    public ProposedItem itemData { get; set; }

    string color;

    string defaultColor = "#accce7";
    string activeColor = "#86abca";

    protected override void OnInitialized()
    {
        //TODO: Remove this once onClick implemented
        itemData.Active = false;

        if(itemData.Active)
        {
            color = activeColor;
        }
        else
        {
            color = defaultColor;
        }
    }
}
