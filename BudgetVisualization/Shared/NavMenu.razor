@using Microsoft.AspNetCore.Components

    <MatNavMenu Class="sidebarApp">
        <MatNavItem Class="sidebarApp-item">
            <div class="sidebarApp-item-content">
                <MatIcon Icon="supervised_user_circle"></MatIcon>
                <div>Community Services </div>
            </div>
        </MatNavItem>
        <MatDivider></MatDivider>
        <MatNavItem Class="sidebarApp-item">
            <div class="sidebarApp-item-content">
                <MatIcon Icon="directions_bus"></MatIcon>
                <div>Transportation  </div>
            </div>
        </MatNavItem>
        <MatDivider></MatDivider>
        <MatNavItem Class="sidebarApp-item">
            <div class="sidebarApp-item-content">
                <MatIcon Icon="outlined_flag"></MatIcon>
                <div>Judicial Administration  </div>
            </div>
        </MatNavItem>
        <MatDivider></MatDivider>
        <MatNavItem Class="sidebarApp-item">
            <div class="sidebarApp-item-content">
                <MatIcon Icon="home"></MatIcon>
                <div>Housing  </div>
            </div>
        </MatNavItem>
        <MatDivider></MatDivider>
        <MatNavItem Class="sidebarApp-item">
            <div class="sidebarApp-item-content">
                <MatIcon Icon="sentiment_satisfied"></MatIcon>
                <div>Juvenile Services  </div>
            </div>
        </MatNavItem>
        <MatDivider></MatDivider>
    </MatNavMenu>




<style>
/*    .sidebarApp-item {
        height: 120px;
    }

    .sidebarApp-item-mobile {
        height: 120px;
        float: left;
        padding: 3vw;
        width: 20vw;
        background-color: whitesmoke
    }*/

    .sidebarApp-item-content {
        font-size: 11px;
        position: relative;
        text-align: center;
        margin: auto;
    }


/*    .sidebarApp {
        width: 110px;
        height: 100vh;
        background-color: whitesmoke;
    }

    .sidebarApp-mobile {
        background-color: whitesmoke;
        width: 100vw;
        display: inline-block;
        height: -webkit-fill-available;
    }*/
</style>


@code
{

    protected override async Task OnInitializedAsync()
    {
        // Subscribe to the StateChanged EventHandler
        AppState.StateChanged +=
            AppStateHasChanged;
    }

    // This method is fired when the AppState object
    // invokes its StateHasChanged() method
    void AppStateHasChanged(
    object sender, EventArgs e) => StateHasChanged();



}